<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Smart Image Converter - Convert Your Images Easily</title>

  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  
  <!-- Font Awesome for Icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  
  <!-- Google AdSense -->
  <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-2708832535381203"
       crossorigin="anonymous"></script>

  <style>
    :root {
      --primary-color: #4361ee;
      --secondary-color: #3f37c9;
      --success-color: #06ffa5;
      --danger-color: #ff006e;
      --warning-color: #ffbe0b;
      --dark-color: #2b2d42;
      --light-color: #f8f9fa;
      --border-radius: 12px;
      --box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
      --transition: all 0.3s ease;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: "Poppins", sans-serif;
      background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);
      color: var(--dark-color);
      display: flex;
      flex-direction: column;
      min-height: 100vh;
    }

    /* Header Styles */
    header {
      background: white;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
      padding: 20px 0;
      position: sticky;
      top: 0;
      z-index: 100;
    }

    .header-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .logo {
      display: flex;
      align-items: center;
      gap: 10px;
      font-size: 1.5rem;
      font-weight: 700;
      color: var(--primary-color);
    }

    .nav-links {
      display: flex;
      gap: 30px;
      list-style: none;
    }

    .nav-links a {
      text-decoration: none;
      color: var(--dark-color);
      font-weight: 500;
      transition: var(--transition);
    }

    .nav-links a:hover {
      color: var(--primary-color);
    }

    /* Main Content */
    main {
      flex: 1;
      max-width: 1200px;
      margin: 0 auto;
      padding: 40px 20px;
      width: 100%;
    }

    .hero-section {
      text-align: center;
      margin-bottom: 40px;
    }

    h1 {
      font-size: 2.5rem;
      font-weight: 700;
      color: var(--primary-color);
      margin-bottom: 10px;
    }

    .subtitle {
      font-size: 1.1rem;
      color: #6c757d;
      max-width: 600px;
      margin: 0 auto;
    }

    /* Converter Container */
    .converter-container {
      background: white;
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow);
      padding: 30px;
      margin-bottom: 30px;
    }

    /* Uploader Styles */
    .uploader {
      border: 2px dashed #adb5bd;
      border-radius: var(--border-radius);
      padding: 40px;
      text-align: center;
      background: var(--light-color);
      transition: var(--transition);
      cursor: pointer;
      position: relative;
      overflow: hidden;
    }

    .uploader.dragover {
      border-color: var(--primary-color);
      background: rgba(67, 97, 238, 0.05);
      transform: scale(1.02);
    }

    .uploader-icon {
      font-size: 3rem;
      color: var(--primary-color);
      margin-bottom: 15px;
    }

    .uploader p {
      font-size: 1.1rem;
      margin-bottom: 15px;
      color: #495057;
    }

    .browse-btn {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      padding: 12px 24px;
      border: none;
      background: var(--primary-color);
      color: white;
      font-size: 1rem;
      font-weight: 500;
      border-radius: 8px;
      cursor: pointer;
      transition: var(--transition);
    }

    .browse-btn:hover {
      background: var(--secondary-color);
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(67, 97, 238, 0.3);
    }

    /* File List Styles */
    .file-list {
      width: 100%;
      margin-top: 20px;
      background: white;
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow);
      overflow: hidden;
      display: none;
    }

    .file-list-header {
      background: var(--primary-color);
      color: white;
      padding: 12px 20px;
      font-weight: 500;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .file-list-content {
      max-height: 300px;
      overflow-y: auto;
    }

    .file-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px 20px;
      border-bottom: 1px solid #e9ecef;
      transition: var(--transition);
    }

    .file-item:hover {
      background: #f8f9fa;
    }

    .file-item:last-child {
      border-bottom: none;
    }

    .file-info {
      display: flex;
      align-items: center;
      gap: 12px;
      flex: 1;
    }

    .file-icon {
      font-size: 1.5rem;
      color: var(--primary-color);
    }

    .file-details {
      flex: 1;
    }

    .file-name {
      font-weight: 500;
      color: var(--dark-color);
      margin-bottom: 4px;
      word-break: break-all;
    }

    .file-size {
      font-size: 0.85rem;
      color: #6c757d;
    }

    .delete-btn {
      background: none;
      border: none;
      color: var(--danger-color);
      font-size: 1.2rem;
      cursor: pointer;
      padding: 5px;
      transition: var(--transition);
    }

    .delete-btn:hover {
      transform: scale(1.2);
    }

    /* Options Container */
    .options-container {
      width: 100%;
      margin-top: 20px;
      padding: 20px;
      background: white;
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow);
      display: none;
    }

    .options-title {
      font-size: 1.2rem;
      font-weight: 600;
      margin-bottom: 15px;
      color: var(--dark-color);
    }

    .format-options {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
      gap: 10px;
      margin-bottom: 20px;
    }

    .format-option {
      padding: 10px;
      border: 2px solid #e9ecef;
      border-radius: 8px;
      text-align: center;
      cursor: pointer;
      transition: var(--transition);
      font-weight: 500;
    }

    .format-option:hover {
      border-color: var(--primary-color);
      background: rgba(67, 97, 238, 0.05);
    }

    .format-option.selected {
      background: var(--primary-color);
      color: white;
      border-color: var(--primary-color);
    }

    .convert-btn {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      margin-top: 20px;
      background: var(--success-color);
      color: var(--dark-color);
      padding: 14px 32px;
      border: none;
      border-radius: 10px;
      font-size: 1.1rem;
      font-weight: 600;
      cursor: pointer;
      transition: var(--transition);
    }

    .convert-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(6, 255, 165, 0.3);
    }

    .convert-btn:disabled {
      background: #e9ecef;
      color: #6c757d;
      cursor: not-allowed;
      transform: none;
      box-shadow: none;
    }

    /* Progress Container */
    .progress-container {
      width: 100%;
      margin-top: 20px;
      display: none;
    }

    .progress-bar {
      height: 8px;
      background: #e9ecef;
      border-radius: 4px;
      overflow: hidden;
    }

    .progress {
      height: 100%;
      background: var(--primary-color);
      width: 0%;
      transition: width 0.3s ease;
    }

    .progress-text {
      margin-top: 8px;
      font-size: 0.9rem;
      color: #6c757d;
      text-align: center;
    }

    /* Results Container */
    .results-container {
      width: 100%;
      margin-top: 20px;
      display: none;
    }

    .result-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px;
      background: white;
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow);
      margin-bottom: 10px;
    }

    .download-btn {
      display: inline-flex;
      align-items: center;
      gap: 5px;
      padding: 8px 16px;
      background: var(--primary-color);
      color: white;
      border: none;
      border-radius: 6px;
      font-size: 0.9rem;
      cursor: pointer;
      transition: var(--transition);
    }

    .download-btn:hover {
      background: var(--secondary-color);
    }

    /* Ad Containers */
    .ad-container {
      width: 100%;
      margin: 30px 0;
      text-align: center;
      background: #f8f9fa;
      border-radius: var(--border-radius);
      padding: 20px;
      box-shadow: var(--box-shadow);
    }

    .ad-label {
      font-size: 0.85rem;
      color: #6c757d;
      margin-bottom: 10px;
      text-transform: uppercase;
      letter-spacing: 1px;
    }

    .ad-horizontal {
      max-width: 728px;
      margin: 0 auto;
    }

    .ad-vertical {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 20px;
      max-width: 1000px;
      margin: 0 auto;
    }

    .ad-item {
      background: white;
      border-radius: 8px;
      padding: 10px;
      min-height: 250px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    /* Features Section */
    .features-section {
      background: white;
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow);
      padding: 40px;
      margin: 30px 0;
    }

    .features-title {
      font-size: 1.8rem;
      font-weight: 600;
      color: var(--dark-color);
      text-align: center;
      margin-bottom: 30px;
    }

    .features-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 30px;
    }

    .feature-card {
      text-align: center;
      padding: 20px;
    }

    .feature-icon {
      font-size: 2.5rem;
      color: var(--primary-color);
      margin-bottom: 15px;
    }

    .feature-title {
      font-size: 1.2rem;
      font-weight: 600;
      margin-bottom: 10px;
      color: var(--dark-color);
    }

    .feature-description {
      color: #6c757d;
      line-height: 1.6;
    }

    /* Privacy Policy Section */
    .privacy-section {
      background: white;
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow);
      padding: 40px;
      margin: 30px 0;
    }

    .privacy-title {
      font-size: 2rem;
      font-weight: 600;
      color: var(--primary-color);
      margin-bottom: 30px;
      text-align: center;
    }

    .privacy-content {
      max-width: 800px;
      margin: 0 auto;
    }

    .privacy-section-title {
      font-size: 1.4rem;
      font-weight: 600;
      color: var(--dark-color);
      margin: 30px 0 15px;
      padding-bottom: 10px;
      border-bottom: 2px solid var(--light-color);
    }

    .privacy-subtitle {
      font-size: 1.1rem;
      font-weight: 500;
      color: var(--dark-color);
      margin: 20px 0 10px;
    }

    .privacy-text {
      color: #6c757d;
      line-height: 1.7;
      margin-bottom: 15px;
    }

    .privacy-list {
      margin: 15px 0;
      padding-left: 25px;
    }

    .privacy-list li {
      color: #6c757d;
      line-height: 1.7;
      margin-bottom: 8px;
    }

    .privacy-highlight {
      background: rgba(67, 97, 238, 0.1);
      padding: 20px;
      border-radius: 8px;
      margin: 20px 0;
      border-left: 4px solid var(--primary-color);
    }

    .privacy-highlight p {
      color: var(--dark-color);
      font-weight: 500;
    }

    .contact-info {
      background: var(--light-color);
      padding: 20px;
      border-radius: 8px;
      margin-top: 30px;
    }

    .contact-info p {
      color: var(--dark-color);
      margin-bottom: 10px;
    }

    .contact-info a {
      color: var(--primary-color);
      text-decoration: none;
      font-weight: 500;
    }

    .contact-info a:hover {
      text-decoration: underline;
    }

    /* Footer */
    footer {
      background: var(--dark-color);
      color: white;
      padding: 40px 0 20px;
      margin-top: 50px;
    }

    .footer-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 20px;
    }

    .footer-content {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 30px;
      margin-bottom: 30px;
    }

    .footer-section h3 {
      margin-bottom: 15px;
      color: var(--primary-color);
    }

    .footer-section ul {
      list-style: none;
    }

    .footer-section ul li {
      margin-bottom: 8px;
    }

    .footer-section a {
      color: #adb5bd;
      text-decoration: none;
      transition: var(--transition);
    }

    .footer-section a:hover {
      color: white;
    }

    .footer-bottom {
      text-align: center;
      padding-top: 20px;
      border-top: 1px solid #495057;
      color: #adb5bd;
    }

    .social-links {
      display: flex;
      gap: 15px;
      margin-top: 15px;
    }

    .social-links a {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      background: rgba(255, 255, 255, 0.1);
      border-radius: 50%;
      color: white;
      transition: var(--transition);
    }

    .social-links a:hover {
      background: var(--primary-color);
      transform: translateY(-3px);
    }

    /* Cookie Banner */
    .cookie-banner {
      position: fixed;
      bottom: 0;
      left: 0;
      width: 100%;
      background: var(--dark-color);
      color: white;
      padding: 15px 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      box-shadow: 0 -2px 10px rgba(0,0,0,0.2);
      z-index: 1000;
      transform: translateY(100%);
      transition: transform 0.3s ease;
    }

    .cookie-banner.show {
      transform: translateY(0);
    }

    .cookie-text {
      flex: 1;
      margin-right: 20px;
    }

    .cookie-btn {
      background: var(--primary-color);
      border: none;
      padding: 8px 20px;
      border-radius: 5px;
      color: white;
      cursor: pointer;
      transition: var(--transition);
    }

    .cookie-btn:hover {
      background: var(--secondary-color);
    }

    /* Toast Notification */
    .toast {
      position: fixed;
      top: 20px;
      right: 20px;
      padding: 15px 20px;
      background: white;
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow);
      display: flex;
      align-items: center;
      gap: 10px;
      transform: translateX(120%);
      transition: transform 0.3s ease;
      z-index: 1001;
      max-width: 350px;
    }

    .toast.show {
      transform: translateX(0);
    }

    .toast-icon {
      font-size: 1.2rem;
    }

    .toast.success .toast-icon {
      color: var(--success-color);
    }

    .toast.error .toast-icon {
      color: var(--danger-color);
    }

    .toast.warning .toast-icon {
      color: var(--warning-color);
    }

    /* Modal */
    .modal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 2000;
      opacity: 0;
      visibility: hidden;
      transition: var(--transition);
    }

    .modal.show {
      opacity: 1;
      visibility: visible;
    }

    .modal-content {
      background: white;
      border-radius: var(--border-radius);
      padding: 30px;
      max-width: 500px;
      width: 90%;
      transform: scale(0.8);
      transition: var(--transition);
    }

    .modal.show .modal-content {
      transform: scale(1);
    }

    .modal-header {
      margin-bottom: 20px;
    }

    .modal-title {
      font-size: 1.5rem;
      font-weight: 600;
      color: var(--dark-color);
    }

    .modal-body {
      margin-bottom: 20px;
      color: #6c757d;
    }

    .modal-footer {
      display: flex;
      justify-content: flex-end;
      gap: 10px;
    }

    .btn {
      padding: 10px 20px;
      border: none;
      border-radius: 6px;
      font-weight: 500;
      cursor: pointer;
      transition: var(--transition);
    }

    .btn-primary {
      background: var(--primary-color);
      color: white;
    }

    .btn-primary:hover {
      background: var(--secondary-color);
    }

    .btn-secondary {
      background: #e9ecef;
      color: var(--dark-color);
    }

    .btn-secondary:hover {
      background: #dee2e6;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      h1 {
        font-size: 2rem;
      }
      
      .header-container {
        flex-direction: column;
        gap: 20px;
      }
      
      .nav-links {
        flex-wrap: wrap;
        justify-content: center;
        gap: 15px;
      }
      
      .converter-container {
        padding: 20px;
      }
      
      .uploader {
        padding: 30px 20px;
      }
      
      .format-options {
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
      }
      
      .cookie-banner {
        flex-direction: column;
        text-align: center;
        gap: 10px;
      }
      
      .cookie-text {
        margin-right: 0;
      }
      
      .features-grid {
        grid-template-columns: 1fr;
      }
      
      .footer-content {
        grid-template-columns: 1fr;
        text-align: center;
      }
      
      .social-links {
        justify-content: center;
      }
    }

    /* Loading Spinner */
    .spinner {
      border: 3px solid #f3f3f3;
      border-top: 3px solid var(--primary-color);
      border-radius: 50%;
      width: 30px;
      height: 30px;
      animation: spin 1s linear infinite;
      display: inline-block;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    /* Tooltip */
    .tooltip {
      position: relative;
    }

    .tooltip::after {
      content: attr(data-tooltip);
      position: absolute;
      bottom: 100%;
      left: 50%;
      transform: translateX(-50%);
      background: var(--dark-color);
      color: white;
      padding: 5px 10px;
      border-radius: 4px;
      font-size: 0.85rem;
      white-space: nowrap;
      opacity: 0;
      visibility: hidden;
      transition: var(--transition);
    }

    .tooltip:hover::after {
      opacity: 1;
      visibility: visible;
    }
  </style>
</head>
<body>
  <!-- Header -->
  <header>
    <div class="header-container">
      <div class="logo">
        <i class="fas fa-image"></i>
        Smart Image Converter
      </div>
      <nav>
        <ul class="nav-links">
          <li><a href="#home">Home</a></li>
          <li><a href="#features">Features</a></li>
          <li><a href="#privacy">Privacy</a></li>
          <li><a href="#contact">Contact</a></li>
        </ul>
      </nav>
    </div>
  </header>

  <!-- Main Content -->
  <main>
    <!-- Hero Section -->
    <section class="hero-section" id="home">
      <h1>Smart Image Converter</h1>
      <p class="subtitle">Convert your images to different formats quickly and easily. Support for JPG, PNG, GIF, BMP, WEBP, and more.</p>
    </section>

    <!-- Top Ad -->
    <div class="ad-container">
      <div class="ad-label">Advertisement</div>
      <div class="ad-horizontal">
        <ins class="adsbygoogle"
             style="display:block"
             data-ad-client="ca-pub-2708832535381203"
             data-ad-slot="4330270745"
             data-ad-format="auto"
             data-full-width-responsive="true"></ins>
        <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
      </div>
    </div>

    <!-- Converter Section -->
    <section class="converter-container">
      <!-- Drag and Drop Zone -->
      <div class="uploader" id="dropZone">
        <div class="uploader-icon">
          <i class="fas fa-cloud-upload-alt"></i>
        </div>
        <p>Drag & drop your images here or</p>
        <button class="browse-btn" id="browseBtn">
          <i class="fas fa-folder-open"></i>
          Browse Images
        </button>
        <input type="file" id="fileInput" multiple accept="image/*" style="display: none;" />
      </div>

      <!-- File List -->
      <div class="file-list" id="fileList">
        <div class="file-list-header">
          <span>Selected Images</span>
          <span id="fileCount">0 images</span>
        </div>
        <div class="file-list-content" id="fileListContent"></div>
      </div>

      <!-- Conversion Options -->
      <div class="options-container" id="optionsContainer">
        <h3 class="options-title">Select Output Format</h3>
        <div class="format-options" id="formatOptions">
          <!-- Format options will be dynamically added -->
        </div>
        <button class="convert-btn" id="convertBtn" disabled>
          <i class="fas fa-cogs"></i>
          Convert Images
        </button>
      </div>

      <!-- Progress Bar -->
      <div class="progress-container" id="progressContainer">
        <div class="progress-bar">
          <div class="progress" id="progressBar"></div>
        </div>
        <div class="progress-text" id="progressText">Processing...</div>
      </div>

      <!-- Results -->
      <div class="results-container" id="resultsContainer">
        <h3 class="options-title">Conversion Results</h3>
        <div id="resultsList"></div>
      </div>
    </section>

    <!-- Features Section -->
    <section class="features-section" id="features">
      <h2 class="features-title">Why Choose Smart Image Converter?</h2>
      <div class="features-grid">
        <div class="feature-card">
          <div class="feature-icon">
            <i class="fas fa-bolt"></i>
          </div>
          <h3 class="feature-title">Lightning Fast</h3>
          <p class="feature-description">Convert your images in seconds with our optimized conversion engine.</p>
        </div>
        <div class="feature-card">
          <div class="feature-icon">
            <i class="fas fa-shield-alt"></i>
          </div>
          <h3 class="feature-title">Secure & Private</h3>
          <p class="feature-description">Your images are processed locally and never stored on our servers.</p>
        </div>
        <div class="feature-card">
          <div class="feature-icon">
            <i class="fas fa-file-image"></i>
          </div>
          <h3 class="feature-title">Multiple Formats</h3>
          <p class="feature-description">Support for all major image formats including JPG, PNG, GIF, BMP, WEBP, and more.</p>
        </div>
        <div class="feature-card">
          <div class="feature-icon">
            <i class="fas fa-mobile-alt"></i>
          </div>
          <h3 class="feature-title">Mobile Friendly</h3>
          <p class="feature-description">Works seamlessly on all devices - desktop, tablet, and mobile.</p>
        </div>
      </div>
    </section>

    <!-- Privacy Policy Section -->
    <section class="privacy-section" id="privacy">
      <h2 class="privacy-title">Privacy Policy</h2>
      <div class="privacy-content">
        <p class="privacy-text">
          <strong>Last updated:</strong> December 2024
        </p>
        
        <h3 class="privacy-section-title">1. Introduction</h3>
        <p class="privacy-text">
          Welcome to Smart Image Converter. We are committed to protecting your personal information and your right to privacy. This Privacy Policy explains how we collect, use, protect, and share information when you use our website and services.
        </p>
        
        <h3 class="privacy-section-title">2. Information We Collect</h3>
        <h4 class="privacy-subtitle">2.1 Information You Provide</h4>
        <p class="privacy-text">
          When you use our image converter service, you may provide us with:
        </p>
        <ul class="privacy-list">
          <li>Image files that you upload for conversion</li>
          <li>Optional contact information if you reach out to our support team</li>
        </ul>
        
        <h4 class="privacy-subtitle">2.2 Automatically Collected Information</h4>
        <p class="privacy-text">
          We automatically collect certain information when you visit our website:
        </p>
        <ul class="privacy-list">
          <li>IP address and browser type</li>
          <li>Device information and operating system</li>
          <li>Pages visited and time spent on our site</li>
          <li>Referring website addresses</li>
        </ul>
        
        <h3 class="privacy-section-title">3. How We Use Your Information</h3>
        <p class="privacy-text">
          We use the information we collect to:
        </p>
        <ul class="privacy-list">
          <li>Provide and maintain our image conversion service</li>
          <li>Process and convert your uploaded images</li>
          <li>Improve our website and services</li>
          <li>Analyze usage patterns to optimize user experience</li>
          <li>Respond to your inquiries and provide customer support</li>
          <li>Display relevant advertisements through Google AdSense</li>
        </ul>
        
        <h3 class="privacy-section-title">4. Image Processing and Privacy</h3>
        <div class="privacy-highlight">
          <p><strong>Important:</strong> Your images are processed locally in your browser using JavaScript. We do not upload, store, or retain your images on our servers. Once you close the browser tab or navigate away from our site, all processed images are permanently deleted from your device's temporary memory.</p>
        </div>
        
        <h3 class="privacy-section-title">5. Cookies and Tracking Technologies</h3>
        <p class="privacy-text">
          We use cookies and similar tracking technologies to enhance your experience:
        </p>
        <ul class="privacy-list">
          <li><strong>Essential Cookies:</strong> Required for the website to function properly</li>
          <li><strong>Analytics Cookies:</strong> Help us understand how visitors interact with our site</li>
          <li><strong>Advertising Cookies:</strong> Used by Google AdSense to display personalized ads</li>
        </ul>
        
        <h3 class="privacy-section-title">6. Third-Party Services</h3>
        <p class="privacy-text">
          Our website uses the following third-party services:
        </p>
        <ul class="privacy-list">
          <li><strong>Google AdSense:</strong> For displaying advertisements. Google may use cookies to collect information about your visits to this and other websites to provide advertisements about goods and services of interest to you.</li>
          <li><strong>Google Fonts:</strong> For displaying web fonts on our site</li>
          <li><strong>Font Awesome:</strong> For displaying icons on our site</li>
        </ul>
        
        <h3 class="privacy-section-title">7. Data Security</h3>
        <p class="privacy-text">
          We implement appropriate security measures to protect your information:
        </p>
        <ul class="privacy-list">
          <li>All image processing happens locally in your browser</li>
          <li>We use HTTPS encryption for all data transmissions</li>
          <li>We regularly update our security protocols</li>
          <li>We limit access to personal information to authorized personnel only</li>
        </ul>
        
        <h3 class="privacy-section-title">8. Your Rights</h3>
        <p class="privacy-text">
          You have the following rights regarding your personal information:
        </p>
        <ul class="privacy-list">
          <li><strong>Access:</strong> Request access to your personal information</li>
          <li><strong>Correction:</strong> Request correction of inaccurate information</li>
          <li><strong>Deletion:</strong> Request deletion of your personal information</li>
          <li><strong>Opt-out:</strong> Opt-out of cookies through your browser settings</li>
        </ul>
        
        <h3 class="privacy-section-title">9. Children's Privacy</h3>
        <p class="privacy-text">
          Our service is not intended for children under 13 years of age. We do not knowingly collect personal information from children under 13. If you are a parent or guardian and believe your child has provided us with personal information, please contact us immediately.
        </p>
        
        <h3 class="privacy-section-title">10. International Data Transfers</h3>
        <p class="privacy-text">
          Your information may be transferred to and processed in countries other than your own. We ensure appropriate safeguards are in place to protect your information in accordance with applicable data protection laws.
        </p>
        
        <h3 class="privacy-section-title">11. Changes to This Privacy Policy</h3>
        <p class="privacy-text">
          We may update this Privacy Policy from time to time. We will notify you of any changes by posting the new Privacy Policy on this page and updating the "Last updated" date at the top.
        </p>
        
        <h3 class="privacy-section-title">12. Contact Us</h3>
        <div class="contact-info">
          <p>If you have any questions about this Privacy Policy or our data practices, please contact us:</p>
          <p><strong>Email:</strong> <a href="mailto:privacy@smartimageconverter.com">privacy@smartimageconverter.com</a></p>
          <p><strong>Website:</strong> <a href="https://www.smartimageconverter.com">www.smartimageconverter.com</a></p>
          <p><strong>Response Time:</strong> We will respond to your inquiry within 30 days.</p>
        </div>
      </div>
    </section>

    <!-- Middle Ad -->
    <div class="ad-container">
      <div class="ad-label">Advertisement</div>
      <div class="ad-vertical">
        <div class="ad-item">
          <ins class="adsbygoogle"
               style="display:inline-block;width:300px;height:250px"
               data-ad-client="ca-pub-2708832535381203"
               data-ad-slot="6603449987"></ins>
          <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
        </div>
        <div class="ad-item">
          <ins class="adsbygoogle"
               style="display:inline-block;width:300px;height:250px"
               data-ad-client="ca-pub-2708832535381203"
               data-ad-slot="6709022070"></ins>
          <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
        </div>
        <div class="ad-item">
          <ins class="adsbygoogle"
               style="display:inline-block;width:300px;height:250px"
               data-ad-client="ca-pub-2708832535381203"
               data-ad-slot="6962542631"></ins>
          <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
        </div>
      </div>
    </div>

    <!-- Bottom Ad -->
    <div class="ad-container">
      <div class="ad-label">Advertisement</div>
      <div class="ad-horizontal">
        <ins class="adsbygoogle"
             style="display:block"
             data-ad-client="ca-pub-2708832535381203"
             data-ad-slot="6170552754"
             data-ad-format="auto"
             data-full-width-responsive="true"></ins>
        <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
      </div>
    </div>
  </main>

  <!-- Footer -->
  <footer>
    <div class="footer-container">
      <div class="footer-content">
        <div class="footer-section">
          <h3>About Us</h3>
          <p>Smart Image Converter is your trusted partner for all image conversion needs. Fast, secure, and easy to use.</p>
          <div class="social-links">
            <a href="#" class="tooltip" data-tooltip="Facebook">
              <i class="fab fa-facebook-f"></i>
            </a>
            <a href="#" class="tooltip" data-tooltip="Twitter">
              <i class="fab fa-twitter"></i>
            </a>
            <a href="#" class="tooltip" data-tooltip="LinkedIn">
              <i class="fab fa-linkedin-in"></i>
            </a>
            <a href="#" class="tooltip" data-tooltip="Instagram">
              <i class="fab fa-instagram"></i>
            </a>
          </div>
        </div>
        <div class="footer-section">
          <h3>Quick Links</h3>
          <ul>
            <li><a href="#home">Home</a></li>
            <li><a href="#features">Features</a></li>
            <li><a href="#privacy">Privacy Policy</a></li>
            <li><a href="#terms">Terms of Service</a></li>
          </ul>
        </div>
        <div class="footer-section">
          <h3>Support</h3>
          <ul>
            <li><a href="#help">Help Center</a></li>
            <li><a href="#contact">Contact Us</a></li>
            <li><a href="#faq">FAQ</a></li>
            <li><a href="#feedback">Feedback</a></li>
          </ul>
        </div>
        <div class="footer-section">
          <h3>Supported Formats</h3>
          <ul>
            <li><a href="#">Images (JPG, PNG, GIF, BMP, WEBP, ICO, TIFF)</a></li>
            <li><a href="#">High Quality Conversion</a></li>
            <li><a href="#">Batch Processing</a></li>
            <li><a href="#">Preserve Metadata</a></li>
          </ul>
        </div>
      </div>
      <div class="footer-bottom">
        <p>&copy; 2024 Smart Image Converter. All rights reserved. Made with <i class="fas fa-heart" style="color: var(--danger-color);"></i> by Your Team</p>
      </div>
    </div>
  </footer>

  <!-- Cookie Banner -->
  <div class="cookie-banner" id="cookieBanner">
    <div class="cookie-text">
      We use cookies to enhance your experience. By continuing to visit this site you agree to our use of cookies.
      <a href="#privacy" style="color: var(--primary-color); margin-left: 5px;">Learn more</a>
    </div>
    <button class="cookie-btn" id="acceptCookies">Accept All</button>
  </div>

  <!-- Toast Notification -->
  <div class="toast" id="toast">
    <i class="toast-icon fas"></i>
    <span class="toast-message"></span>
  </div>

  <!-- Modal -->
  <div class="modal" id="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2 class="modal-title" id="modalTitle">Title</h2>
      </div>
      <div class="modal-body" id="modalBody">
        Content
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary" id="modalCancel">Cancel</button>
        <button class="btn btn-primary" id="modalConfirm">Confirm</button>
      </div>
    </div>
  </div>

  <script>
    // DOM Elements
    const dropZone = document.getElementById("dropZone");
    const fileInput = document.getElementById("fileInput");
    const browseBtn = document.getElementById("browseBtn");
    const fileList = document.getElementById("fileList");
    const fileListContent = document.getElementById("fileListContent");
    const fileCount = document.getElementById("fileCount");
    const optionsContainer = document.getElementById("optionsContainer");
    const formatOptions = document.getElementById("formatOptions");
    const convertBtn = document.getElementById("convertBtn");
    const progressContainer = document.getElementById("progressContainer");
    const progressBar = document.getElementById("progressBar");
    const progressText = document.getElementById("progressText");
    const resultsContainer = document.getElementById("resultsContainer");
    const resultsList = document.getElementById("resultsList");
    const cookieBanner = document.getElementById("cookieBanner");
    const acceptCookies = document.getElementById("acceptCookies");
    const toast = document.getElementById("toast");
    const toastMessage = toast.querySelector(".toast-message");
    const toastIcon = toast.querySelector(".toast-icon");
    const modal = document.getElementById("modal");
    const modalTitle = document.getElementById("modalTitle");
    const modalBody = document.getElementById("modalBody");
    const modalCancel = document.getElementById("modalCancel");
    const modalConfirm = document.getElementById("modalConfirm");

    // State
    let selectedFiles = [];
    let selectedFormat = null;
    let conversionInProgress = false;

    // File type to icon mapping
    const fileTypeIcons = {
      'image': 'fa-file-image',
      'application/pdf': 'fa-file-pdf',
      'application/msword': 'fa-file-word',
      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'fa-file-word',
      'application/vnd.ms-excel': 'fa-file-excel',
      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'fa-file-excel',
      'application/vnd.ms-powerpoint': 'fa-file-powerpoint',
      'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'fa-file-powerpoint',
      'text': 'fa-file-alt',
      'application/zip': 'fa-file-archive',
      'default': 'fa-file'
    };

    // Supported conversion formats by file type
    const supportedFormats = {
      'image': ['JPG', 'PNG', 'GIF', 'BMP', 'WEBP', 'ICO', 'TIFF'],
      'application/pdf': ['DOCX', 'TXT', 'HTML', 'JPG', 'PNG'],
      'text': ['PDF', 'DOCX', 'HTML', 'RTF'],
      'application/msword': ['PDF', 'TXT', 'HTML', 'RTF'],
      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['PDF', 'TXT', 'HTML', 'RTF'],
      'application/vnd.ms-excel': ['PDF', 'CSV', 'HTML', 'XLSX'],
      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['PDF', 'CSV', 'HTML', 'XLS'],
      'application/vnd.ms-powerpoint': ['PDF', 'JPG', 'PNG', 'PPTX'],
      'application/vnd.openxmlformats-officedocument.presentationml.presentation': ['PDF', 'JPG', 'PNG', 'PPT']
    };

    // Initialize
    document.addEventListener('DOMContentLoaded', () => {
      // Check cookie consent
      if (!localStorage.getItem("cookiesAccepted")) {
        setTimeout(() => {
          cookieBanner.classList.add("show");
        }, 1000);
      }

      // Initialize AdSense
      try {
        (adsbygoogle = window.adsbygoogle || []).push({});
      } catch (e) {
        console.log('AdSense initialization error:', e);
      }

      // Initialize tooltips
      initializeTooltips();

      // Smooth scrolling for navigation links
      initializeSmoothScroll();
    });

    // Initialize tooltips
    function initializeTooltips() {
      document.querySelectorAll('.tooltip').forEach(element => {
        element.addEventListener('mouseenter', function() {
          this.style.position = 'relative';
        });
      });
    }

    // Initialize smooth scrolling
    function initializeSmoothScroll() {
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          const target = document.querySelector(this.getAttribute('href'));
          if (target) {
            target.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        });
      });
    }

    // Browse Files Button
    browseBtn.addEventListener("click", (e) => {
      e.preventDefault();
      e.stopPropagation();
      fileInput.click();
    });

    // Drop Zone Click
    dropZone.addEventListener("click", (e) => {
      if (e.target !== browseBtn && !browseBtn.contains(e.target)) {
        fileInput.click();
      }
    });

    // File Input Selection
    fileInput.addEventListener("change", (e) => {
      handleFiles(e.target.files);
      fileInput.value = ""; // reset input for re-selection
    });

    // Drag-and-Drop Events
    ["dragenter", "dragover"].forEach(eventName => {
      dropZone.addEventListener(eventName, (e) => {
        e.preventDefault();
        e.stopPropagation();
        dropZone.classList.add("dragover");
      });
    });

    ["dragleave", "drop"].forEach(eventName => {
      dropZone.addEventListener(eventName, (e) => {
        e.preventDefault();
        e.stopPropagation();
        dropZone.classList.remove("dragover");
      });
    });

    dropZone.addEventListener("drop", (e) => {
      handleFiles(e.dataTransfer.files);
    });

    // Handle Files
    function handleFiles(files) {
      const newFiles = Array.from(files);
      let duplicateCount = 0;
      let nonImageCount = 0;
      
      newFiles.forEach(file => {
        // Check if file is an image
        if (!file.type.startsWith('image/')) {
          nonImageCount++;
          return;
        }
        
        // Check if file already exists
        if (!selectedFiles.some(f => f.name === file.name && f.size === file.size)) {
          selectedFiles.push(file);
        } else {
          duplicateCount++;
        }
      });
      
      renderFileList();
      updateFormatOptions();
      
      if (nonImageCount > 0) {
        showToast(`${nonImageCount} non-image file(s) skipped. Only images are supported.`, 'warning');
      }
      
      if (duplicateCount > 0) {
        showToast(`${duplicateCount} duplicate file(s) skipped`, 'warning');
      }
      
      if (newFiles.length - duplicateCount - nonImageCount > 0) {
        showToast(`${newFiles.length - duplicateCount - nonImageCount} image(s) added successfully`, 'success');
      }
    }

    // Render File List
    function renderFileList() {
      fileListContent.innerHTML = "";
      
      if (selectedFiles.length === 0) {
        fileList.style.display = "none";
        optionsContainer.style.display = "none";
        resultsContainer.style.display = "none";
        return;
      }

      fileList.style.display = "block";
      optionsContainer.style.display = "block";
      fileCount.textContent = `${selectedFiles.length} image${selectedFiles.length > 1 ? 's' : ''}`;

      selectedFiles.forEach((file, index) => {
        const item = document.createElement("div");
        item.className = "file-item";
        
        // Get file type and icon
        const fileType = getFileType(file);
        const iconClass = fileTypeIcons[fileType] || fileTypeIcons['default'];
        
        item.innerHTML = `
          <div class="file-info">
            <i class="file-icon fas ${iconClass}"></i>
            <div class="file-details">
              <div class="file-name">${escapeHtml(file.name)}</div>
              <div class="file-size">${formatFileSize(file.size)} • ${file.type || 'Unknown type'}</div>
            </div>
          </div>
          <button class="delete-btn tooltip" data-index="${index}" data-tooltip="Remove image">
            <i class="fas fa-times-circle"></i>
          </button>
        `;
        fileListContent.appendChild(item);
      });

      // Delete logic
      document.querySelectorAll(".delete-btn").forEach(btn => {
        btn.addEventListener("click", (e) => {
          const idx = parseInt(e.currentTarget.getAttribute("data-index"));
          const removedFile = selectedFiles[idx];
          selectedFiles.splice(idx, 1);
          renderFileList();
          updateFormatOptions();
          showToast(`${removedFile.name} removed`, 'warning');
        });
      });
    }

    // Update Format Options
    function updateFormatOptions() {
      formatOptions.innerHTML = "";
      
      if (selectedFiles.length === 0) {
        convertBtn.disabled = true;
        return;
      }

      // Get common file types
      const fileTypes = selectedFiles.map(file => getFileType(file));
      const commonFormats = getCommonFormats(fileTypes);
      
      if (commonFormats.length === 0) {
        formatOptions.innerHTML = "<p style='color: #6c757d;'>No conversion options available for these file types</p>";
        convertBtn.disabled = true;
        return;
      }

      commonFormats.forEach(format => {
        const option = document.createElement("div");
        option.className = "format-option";
        option.textContent = format;
        option.addEventListener("click", () => selectFormat(format, option));
        formatOptions.appendChild(option);
      });

      // Select first format by default
      if (formatOptions.firstChild) {
        selectFormat(commonFormats[0], formatOptions.firstChild);
      }
    }

    // Select Format
    function selectFormat(format, element) {
      // Remove previous selection
      document.querySelectorAll(".format-option").forEach(opt => {
        opt.classList.remove("selected");
      });
      
      // Add selection to clicked element
      element.classList.add("selected");
      selectedFormat = format;
      
      // Enable convert button
      convertBtn.disabled = false;
    }

    // Get File Type
    function getFileType(file) {
      if (file.type.startsWith('image/')) return 'image';
      if (file.type.startsWith('text/')) return 'text';
      return file.type;
    }

    // Get Common Formats
    function getCommonFormats(fileTypes) {
      // For simplicity, we'll just return formats for the first file type
      // In a real app, you might want to find formats common to all file types
      const firstType = fileTypes[0];
      return supportedFormats[firstType] || [];
    }

    // Format File Size
    function formatFileSize(bytes) {
      if (bytes === 0) return '0 Bytes';
      const k = 1024;
      const sizes = ['Bytes', 'KB', 'MB', 'GB'];
      const i = Math.floor(Math.log(bytes) / Math.log(k));
      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }

    // Escape HTML
    function escapeHtml(text) {
      const map = {
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        "'": '&#039;'
      };
      return text.replace(/[&<>"']/g, m => map[m]);
    }

    // Convert Button
    convertBtn.addEventListener("click", () => {
      if (selectedFiles.length === 0) {
        showToast("Please upload or select at least one image to convert.", 'error');
        return;
      }

      if (!selectedFormat) {
        showToast("Please select an output format.", 'error');
        return;
      }

      // Show confirmation modal for large files
      const totalSize = selectedFiles.reduce((sum, file) => sum + file.size, 0);
      if (totalSize > 50 * 1024 * 1024) { // 50MB
        showModal(
          'Large File Warning',
          `You are converting ${formatFileSize(totalSize)} of images. This may take some time. Do you want to continue?`,
          () => startConversion()
        );
      } else {
        startConversion();
      }
    });

    // Start Conversion
    function startConversion() {
      if (conversionInProgress) return;
      
      conversionInProgress = true;
      convertBtn.disabled = true;
      
      // Show progress
      progressContainer.style.display = "block";
      resultsContainer.style.display = "none";
      
      // Simulate conversion process
      simulateConversion();
    }

    // Simulate Conversion Process
    function simulateConversion() {
      let progress = 0;
      const totalFiles = selectedFiles.length;
      let currentFile = 0;
      
      const interval = setInterval(() => {
        progress += 2;
        progressBar.style.width = `${progress}%`;
        
        if (progress % 20 === 0) {
          currentFile = Math.floor(progress / 20);
          if (currentFile <= totalFiles) {
            const fileName = selectedFiles[currentFile - 1]?.name || 'Processing...';
            progressText.textContent = `Converting ${currentFile} of ${totalFiles}: ${fileName}`;
          }
        }
        
        if (progress >= 100) {
          clearInterval(interval);
          progressText.textContent = "Conversion complete!";
          setTimeout(() => {
            showResults();
            conversionInProgress = false;
            convertBtn.disabled = false;
          }, 500);
        }
      }, 100);
    }

    // Show Results
    function showResults() {
      resultsContainer.style.display = "block";
      resultsList.innerHTML = "";
      
      selectedFiles.forEach((file, index) => {
        const resultItem = document.createElement("div");
        resultItem.className = "result-item";
        
        const originalName = file.name;
        const nameWithoutExt = originalName.substring(0, originalName.lastIndexOf('.')) || originalName;
        const newFileName = `${nameWithoutExt}.${selectedFormat.toLowerCase()}`;
        
        resultItem.innerHTML = `
          <div class="file-info">
            <i class="file-icon fas ${fileTypeIcons[getFileType(file)] || fileTypeIcons['default']}"></i>
            <div class="file-details">
              <div class="file-name">${escapeHtml(newFileName)}</div>
              <div class="file-size">${formatFileSize(file.size)} • Converted to ${selectedFormat}</div>
            </div>
          </div>
          <button class="download-btn" data-index="${index}" data-filename="${newFileName}">
            <i class="fas fa-download"></i>
            Download
          </button>
        `;
        resultsList.appendChild(resultItem);
      });
      
      // Add download functionality
      document.querySelectorAll(".download-btn").forEach(btn => {
        btn.addEventListener("click", (e) => {
          const index = parseInt(e.currentTarget.getAttribute("data-index"));
          const filename = e.currentTarget.getAttribute("data-filename");
          downloadFile(selectedFiles[index], filename);
        });
      });
      
      showToast("Images converted successfully!", 'success');
    }

    // Download File
    function downloadFile(originalFile, newFilename) {
      // In a real app, this would download the actual converted file
      // For demo purposes, we'll create a dummy blob with the original file content
      const reader = new FileReader();
      reader.onload = function() {
        const blob = new Blob([reader.result], { type: originalFile.type });
        const url = URL.createObjectURL(blob);
        const a = document.createElement("a");
        a.href = url;
        a.download = newFilename;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        
        showToast(`${newFilename} downloaded`, 'success');
      };
      reader.readAsArrayBuffer(originalFile);
    }

    // Show Toast Notification
    function showToast(message, type = 'success') {
      toastMessage.textContent = message;
      toast.className = `toast ${type}`;
      
      // Set icon based on type
      if (type === 'success') {
        toastIcon.className = "toast-icon fas fa-check-circle";
      } else if (type === 'error') {
        toastIcon.className = "toast-icon fas fa-exclamation-circle";
      } else if (type === 'warning') {
        toastIcon.className = "toast-icon fas fa-exclamation-triangle";
      }
      
      // Show toast
      setTimeout(() => {
        toast.classList.add("show");
      }, 100);
      
      // Hide toast after 3 seconds
      setTimeout(() => {
        toast.classList.remove("show");
      }, 3000);
    }

    // Show Modal
    function showModal(title, body, onConfirm) {
      modalTitle.textContent = title;
      modalBody.textContent = body;
      modal.classList.add("show");
      
      modalConfirm.onclick = () => {
        modal.classList.remove("show");
        if (onConfirm) onConfirm();
      };
      
      modalCancel.onclick = () => {
        modal.classList.remove("show");
      };
    }

    // Cookie Banner
    acceptCookies.addEventListener("click", () => {
      localStorage.setItem("cookiesAccepted", "true");
      cookieBanner.classList.remove("show");
      showToast("Cookie preferences saved", 'success');
      
      // Load ads after consent
      try {
        (adsbygoogle = window.adsbygoogle || []).push({});
      } catch (e) {
        console.log('AdSense error after consent:', e);
      }
    });

    // Modal close on outside click
    modal.addEventListener("click", (e) => {
      if (e.target === modal) {
        modal.classList.remove("show");
      }
    });

    // Keyboard shortcuts
    document.addEventListener("keydown", (e) => {
      // Ctrl/Cmd + O to open file dialog
      if ((e.ctrlKey || e.metaKey) && e.key === 'o') {
        e.preventDefault();
        fileInput.click();
      }
      
      // Escape to close modal
      if (e.key === 'Escape' && modal.classList.contains('show')) {
        modal.classList.remove('show');
      }
    });

    // Refresh ads periodically
    setInterval(() => {
      try {
        (adsbygoogle = window.adsbygoogle || []).push({});
      } catch (e) {
        console.log('Ad refresh error:', e);
      }
    }, 60000); // Refresh every minute

    // Handle page visibility change
    document.addEventListener("visibilitychange", () => {
      if (document.hidden) {
        // Pause any ongoing operations when page is hidden
        if (conversionInProgress) {
          progressText.textContent = "Conversion paused (tab inactive)";
        }
      } else {
        // Resume operations when page is visible
        if (conversionInProgress) {
          progressText.textContent = "Conversion resumed";
        }
      }
    });

    // Error handling for uncaught errors
    window.addEventListener("error", (e) => {
      console.error("Global error:", e.error);
      showToast("An unexpected error occurred. Please try again.", 'error');
    });

    // Service Worker registration for offline support (optional)
    if ('serviceWorker' in navigator) {
      window.addEventListener('load', () => {
        navigator.serviceWorker.register('/sw.js')
          .then(registration => {
            console.log('SW registered: ', registration);
          })
          .catch(registrationError => {
            console.log('SW registration failed: ', registrationError);
          });
      });
    }
  </script>
</body>
</html>
